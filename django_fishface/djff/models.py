from django.db import models


class Experiment(models.Model):
    experiment_name = models.CharField(
        'descriptive name of experiment (optional)',
        max_length=250,
        null=True)
    experiment_start_dtg = models.DateTimeField(
        'start date/time of experiment'
    )
    experiment_last_viewed = models.DateTimeField(
        'last time the experiment was opened'
    )


class Image(models.Model):
    """
    Each captured image will carry the associated metadata into
    storage with it.  Both the data available at capture time and
    the data generated by the analysis process will be included.
    """

    # Link to a specific experiment
    experiment = models.ForeignKey(Experiment)

    # Data available at capture time.
    dtg_capture = models.DateTimeField('DTG of image capture')
    species = models.CharField('species of fish', max_length=50)
    voltage = models.FloatField('voltage at power supply', default=0)
    filename = models.FilePathField(
        'path of image file',
        blank=True,
        null=True,
    )

    # # Data available after processing.
    orientation = models.SmallIntegerField(
        'angle between the water flow source and the fish',
        default=None,
        blank=True,
        null=True,
    )
    location = models.CommaSeparatedIntegerField(
        'the x,y coordinates of the fish in the image',
        max_length=20,
        blank=True,
        null=True,
    )
    # silhouette =
    # cropped_image = #### only the fish in full color

    # After milestone 1
    # cluster_index = models.SmallIntegerField(default=None, null=True)

    # Verification
    verified_dtg = models.DateTimeField(
        'the dtg at which verification took place',
        blank=True,
        null=True,
    )
    verified_by = models.CharField(
        max_length=100,
        blank=True,
        null=True,
    )